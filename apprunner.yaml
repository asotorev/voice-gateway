version: 1.0
runtime: docker
build:
  commands:
    build:
      # Build optimized for App Runner
      - echo "Building Voice Gateway API container..."
      - docker build -t voice-gateway-api .
run:
  runtime-version: latest
  command: python -m uvicorn app.main:app --host 0.0.0.0 --port 8080
  network:
    port: 8080
    env: APP_PORT
  env:
    # App Runner environment variables
    - name: APP_ENV
      value: "production"
    - name: APP_HOST
      value: "0.0.0.0"
    - name: APP_PORT
      value: "8080"
    - name: PYTHONPATH
      value: "/app"

    # AWS Service endpoints (App Runner provides these automatically)
    - name: AWS_DEFAULT_REGION
      value: "us-east-1"

    # Voice Gateway specific configuration
    - name: LOG_LEVEL
      value: "INFO"
    - name: MAX_UPLOAD_SIZE_MB
      value: "10"
    - name: VOICE_AUTH_TIMEOUT_SECONDS
      value: "30"

    # DynamoDB Table names (should match your Lambda env vars)
    - name: USERS_TABLE_NAME
      value: "voice-gateway-users-prod"

    # S3 Bucket name (should match your Lambda env vars)
    - name: S3_BUCKET_NAME
      value: "voice-gateway-audio-prod"

    # Lambda function names for invocation
    - name: VOICE_AUTH_LAMBDA_FUNCTION_NAME
      value: "voice-gateway-lambda-prod-voiceAuthenticationProcessor"
    - name: REGISTRATION_LAMBDA_FUNCTION_NAME
      value: "voice-gateway-lambda-prod-audioEmbeddingProcessor"

    # Feature flags
    - name: ENABLE_VOICE_AUTHENTICATION
      value: "true"
    - name: ENABLE_REGISTRATION
      value: "true"
    - name: ENABLE_AUDIO_UPLOAD
      value: "true"

    # Security and performance
    - name: CORS_ORIGINS
      value: "*" # Restrict in production
    - name: API_RATE_LIMIT_PER_MINUTE
      value: "100"
    - name: MAX_CONCURRENT_REQUESTS
      value: "50"
